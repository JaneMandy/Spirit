from SpiritCore.Modules import *
from SpiritCore.Session import *
import uuid
class Module(Modules):
    Info = {
        "Name": "Test",
        "Author": "ZSD",
        "Description": "Test ",
        "Options": (
            ("ExitFunc", "thread", True, 'Exit Function Thread Apc', None),
        ),
        "Payload": ["windows/bind_shell_tcp", "Windows Ring3 ShellCode"],

    }

    def Exploit(self):
        # print(self.Parameate)
        print_success("Test Exploit %s" % self.Parameate["TargetIp"])
        SessionObj = Session(self.Object)
        SessionObj.TargetOS =self.Object.UsePayloadObject.OS
        SessionObj.PayloadType=self.Object.UsePayloadObject.Type
        SessionObj.UUID = uuid.uuid1().__str__()
        SessionObj.Object=self.Object.UsePayloadObject
        print_success("UUID:%s   " % (SessionObj.UUID))

        SessionObj.start()
        try:
            SessionObj.Console()
        except Exception as error:
            print_error(error.__str__())
            return
        self.Object.SessionManager.update({SessionObj.UUID: SessionObj})
        self.Object.UsePayloadObject.SetUUidSession(SessionObj.UUID)