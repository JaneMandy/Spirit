from posixpath import expanduser
from SpiritCore.Modules import *
from SpiritCore.Session import *
import uuid
class Module(Modules):
    Info = {
        "Name": "Test",
        "Author": "ZSD",
        "Description": "Test ",
        "Options": (
            ("ExitFunc", "thread", True, 'Exit Function Thread Apc', None),
        ),
<<<<<<< HEAD
        "Payload": ["windows/spiriter", "Payload"],
=======
        "Payload": ["windows/spiriter", "Windows Ring3 ShellCode"],
>>>>>>> 9dbce14cb0e4785b049f67e3bb46f02c4c305560

    }
    Exst=0
    
    def Exploit(self):
<<<<<<< HEAD
        if self.Object.UsePayloadObject.Support==True:
            # write(self.Parameate)
            SessionObj = Session(self.Object)
            SessionObj.TargetOS =self.Object.UsePayloadObject.OS
            SessionObj.PayloadType=self.Object.UsePayloadObject.Types
            SessionObj.SObject=self.Object
            WriteLogs("Call Payload the Handler %s"%self.Object.UsePayloadObject.Name)
            SessionObj.start()
            try:
                SessionObj.Console("")
            except Exception as error:
                write("Error Handler:Exploit:30")
                print_error(error.__str__())
                return
        else:
            print_error("This Payload No SUPPORT SESSION")
    def Generate(self,File,Type="exe"):
        print_msg("Generate Type:%s"%Type)
        try:
            if self.Exst==1:
                try:
                    self.Object.UsePayloadObject.GenerateType="Shellcode"
                except:
                    pass

            if self.Object.UsePayloadObject.Verfily(self.Parameate,File,Type):
                self.Object.UsePayloadObject.GenerateFile()
=======
        # write(self.Parameate)
        SessionObj = Session(self.Object)
        SessionObj.TargetOS =self.Object.UsePayloadObject.OS
        SessionObj.PayloadType=self.Object.UsePayloadObject.Type
        SessionObj.SObject=self.Object
        WriteLogs("Call Payload the Handler %s"%self.Object.UsePayloadObject.Name)

        SessionObj.start()
        try:
            SessionObj.Console("")
>>>>>>> 9dbce14cb0e4785b049f67e3bb46f02c4c305560
        except Exception as error:
            write("Error Handler:Exploit:30")
            print_error(error.__str__())
<<<<<<< HEAD
=======
            return
    def Generate(self,File,Type="exe"):
        print_msg("Generate Type:%s"%Type)
        try:
            self.Object.UsePayloadObject.GenerateFile(self.Parameate,File,Type)
        except Exception as error:
            print_error(error.__str__())
>>>>>>> 9dbce14cb0e4785b049f67e3bb46f02c4c305560
